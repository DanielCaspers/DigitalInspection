@model DigitalInspection.ViewModels.AddMeasurementViewModel

@{
	const string TEMPLATE_NAMESPACE = "addMeasurementDialog";
	const string CANCEL = TEMPLATE_NAMESPACE + "_cancel";
	const string SUCCESS = TEMPLATE_NAMESPACE + "_success";
}

<div id="@TEMPLATE_NAMESPACE" class="modal fade">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
				<h4 class="modal-title">Add measurements</h4>
			</div>
			@*@using (Ajax.BeginForm(
				"Create",
				"Tags",
				FormMethod.Post,
				new AjaxOptions
				{
					InsertionMode = InsertionMode.Replace,
					UpdateTargetId = "tagList"
				},
				new { id = "addTagForm", autocomplete = "off" })
			)
			{*@
			<form id="addMeasurementForm">
				<div class="modal-body">
					@for (int i = 0; i < Model.Measurements.Count; i++)
					{
						<div class="form-group">
							@Html.Label(Model.Measurements[i].Label + " (" + Model.Measurements[i].Unit + ")",
							new { @class = "control-label" })
							@Html.TextBoxFor(m => m.Measurements[i], new
							   {
								   @class = "form-control",
								   type = "number",
								   min = Model.Measurements[i].MinValue,
								   max = Model.Measurements[i].MaxValue,
								   step = Model.Measurements[i].StepSize
							   })
							@*@Html.ValidationMessageFor(m => m.Measurements[i])*@
						</div>
					}
				</div>

				<div class="modal-footer">
					<button id="@CANCEL" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
					<button id="@SUCCESS" type="submit" class="btn btn-primary" data-dismiss="modal" disabled="disabled">Add</button>
				</div>
			</form>

			@*}*@
		</div>
	</div>
</div>
