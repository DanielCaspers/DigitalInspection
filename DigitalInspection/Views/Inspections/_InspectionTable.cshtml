@model DigitalInspection.ViewModels.InspectionDetailViewModel
@using DigitalInspection.Views.Helpers;
@using DigitalInspection.Models.Orders;

<script type="text/javascript">
	const initializeMultiSelects = function () {
		// TODO - WARNING - This might not work with pagination
		//http://stackoverflow.com/a/35651254/2831961
		var selectBoxIds = JSON.parse('@Html.Raw(Json.Encode(Model.Checklist.ChecklistItems.Select(ci => ci.Id).ToList()  ))');
		console.log(selectBoxIds);
		var cannedResponseMultiSelectConfig = MultiSelectService.BASE_MULTISELECT_CONFIG;
		cannedResponseMultiSelectConfig.buttonText = function (options, select) {
			return options.length;
		}
		cannedResponseMultiSelectConfig.maxHeight = 300;
		cannedResponseMultiSelectConfig.enableFiltering = false;
		cannedResponseMultiSelectConfig.enableCaseInsensitiveFiltering = false;

		for (var i = 0; i < selectBoxIds.length; i++) {
			MultiSelectService.show('#' + selectBoxIds[i], cannedResponseMultiSelectConfig);
		}
	}

	InspectionTable.initialize();
	initializeMultiSelects();

	function OnInspectionItemConditionChange(data) {
		$('#' + data.checklistItemId).multiselect('dataprovider', data.filteredCannedResponses);
	}
</script>

<div id="AddMeasurementDynamicDialogContainer">
	@Html.Partial("_AddMeasurementDialog", Model.AddMeasurementVM)
</div>

<div id="AddInspectionNoteDynamicDialogContainer">
	@Html.Partial("_AddInspectionNoteDialog", Model.AddInspectionNoteVM)
</div>

<div id="UploadInspectionPhotosDynamicDialogContainer">
	@Html.Partial("_UploadInspectionPhotosDialog", Model.UploadInspectionPhotosVM)
</div>

<div id="ViewInspectionPhotosDynamicDialogContainer">
	@Html.Partial("_ViewInspectionPhotosDialog", Model.ViewInspectionPhotosVM)
</div>

<div id="inspectionTableErrorContainer"></div>

<div class="jumbotron">
	<table id="inspectionTable" class="table table-striped table-condensed table-responsive form-group">
		<thead>
			<tr>
				<th>Item</th>
				<th>Condition</th>
				<th>Canned Response</th>
				<th></th>
				<th></th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var checklistItem in Model.Checklist.ChecklistItems)
			{
				<tr data-checklistitem-id="@checklistItem.Id">
					<td>@checklistItem.Name</td>
					<td nowrap>
						@using (Ajax.BeginForm(
							"Condition",
							"Inspections",
							new {
								inspectionId = Guid.Empty,
								checklistItemId = checklistItem.Id
							},
							new AjaxOptions
							{
								InsertionMode = InsertionMode.Replace,
								OnSuccess = "OnInspectionItemConditionChange",
								UpdateTargetId = checklistItem.Id.ToString()
							},
							null))
						{

								<div class="condition-group">
									<button type="submit"
											value="@RecommendedServiceSeverity.OK"
											name="inspectionItemCondition"
											class="btn btn-raised btn-success group-left no-margin no-padding-horizontal
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.OK ? "active" : "")">
										<!-- TODO Adjust all anonymous expressions to use inspectionItem.condition  -->
										<i class="material-icons">check</i>
									</button>
									<select data-width="70px"
											name="inspectionItemCondition"
											title=""
											data-style="recommended-service-picker"
											class="selectpicker group-center">
										<option 
											data-content="@RecommendedServiceHelpers.Unknown(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.UNKNOWN ? "selected" : "")
											value="@RecommendedServiceSeverity.UNKNOWN">
										</option>
										<option 
											data-content="@RecommendedServiceHelpers.Immediate(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.IMMEDIATE ? "selected" : "")
											value="@RecommendedServiceSeverity.IMMEDIATE">
											Immediate
										</option>
										<option 
											data-content="@RecommendedServiceHelpers.Moderate(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.MODERATE ? "selected" : "")
											value="@RecommendedServiceSeverity.MODERATE">
										<option
											data-content="@RecommendedServiceHelpers.Watch(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.SHOULD_WATCH ? "selected" : "")
											value="@RecommendedServiceSeverity.SHOULD_WATCH">
											Should watch
										</option>
										<option 
											data-content="@RecommendedServiceHelpers.Maintenance(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.MAINTENANCE ? "selected" : "")
											value="@RecommendedServiceSeverity.MAINTENANCE">
											Maintenance
										</option>
										<option 
											data-content="@RecommendedServiceHelpers.Notes(true, true).ToString()"
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.NOTES ? "selected" : "")
											value="@RecommendedServiceSeverity.NOTES">
											Notes
										</option>
									</select>
									<button type="submit"
											value="@RecommendedServiceSeverity.NOT_APPLICABLE"
											name="inspectionItemCondition"
											class="btn btn-raised btn-info group-right no-margin no-padding-horizontal
											@(RecommendedServiceSeverity.UNKNOWN == RecommendedServiceSeverity.NOT_APPLICABLE ? "active" : "")"
											style="height: 40px;">
										N/A
									</button>
								</div>
							}
					</td>
					<td class="dropdown-cell">
						<!-- TODO: Watch model binding here, was just trying to make it look like it works -->
						<div style="max-width: 80px;">
							@Html.ListBoxFor(
								m => checklistItem.CannedResponses,
								new MultiSelectList(checklistItem.CannedResponses, "Id", "Response"),
								new
								{
									id = checklistItem.Id,
									@class = "form-control ma-multi-select",
									required = "required"
								}
							)
						</div>
					</td>
					<td>
						@if (checklistItem.Measurements.Count > 0)
						{
							@Ajax.RawActionLink("<i class='mdi mdi-ruler mdi-24px'></i>",
								"GetAddMeasurementDialog",
								"Inspections",
								new
								{
									inspectionId = Guid.Empty,
									checklistItemId = checklistItem.Id
								},
								new AjaxOptions
								{
									HttpMethod = "POST",
									InsertionMode = InsertionMode.Replace,
									UpdateTargetId = "AddMeasurementDynamicDialogContainer",
									OnComplete = "DialogService.show('addMeasurementDialog', 'addMeasurementForm')"
								},
								new { @class = "btn btn-primary no-margin no-padding-horizontal" })
						}
					</td>
					<td>
						@Ajax.RawActionLink("<i class='material-icons'>note_add</i>",
								"GetAddInspectionNoteDialog",
								"Inspections",
								new
								{
									inspectionId = Guid.Empty,
									checklistItemId = checklistItem.Id
								},
								new AjaxOptions
								{
									HttpMethod = "POST",
									InsertionMode = InsertionMode.Replace,
									UpdateTargetId = "AddInspectionNoteDynamicDialogContainer",
									OnComplete = "DialogService.show('addInspectionNoteDialog', 'addInspectionNoteForm')"
								},
								new
								{
									@class = "btn btn-primary no-margin no-padding-horizontal"
								})
					</td>
					<td>
						@Ajax.RawActionLink("<i class='material-icons'>add_a_photo</i>",
								"GetUploadInspectionPhotosDialog",
								"Inspections",
								new
								{
									inspectionId = Guid.Empty,
									checklistItemId = checklistItem.Id,
									// TODO: Plugin real WO Id when available
									workOrderId = "007007007"
								},
								new AjaxOptions
								{
									HttpMethod = "POST",
									InsertionMode = InsertionMode.Replace,
									UpdateTargetId = "UploadInspectionPhotosDynamicDialogContainer",
									OnComplete = "DialogService.show('uploadInspectionPhotosDialog', 'uploadInspectionPhotosForm',  UploadInspectionPhotosDialog.initialize)"
								},
								new
								{
									@class = "btn btn-primary no-margin no-padding-horizontal"
								})
					</td>
					<td>
						@Ajax.RawActionLink("<i class='material-icons'>collections</i>",
								"GetViewInspectionPhotosDialog",
								"Inspections",
								new
								{
									inspectionId = Guid.Empty,
									checklistItemId = checklistItem.Id
								},
								new AjaxOptions
								{
									HttpMethod = "POST",
									InsertionMode = InsertionMode.Replace,
									UpdateTargetId = "ViewInspectionPhotosDynamicDialogContainer",
									OnComplete = "DialogService.show('viewInspectionPhotosDialog')"
								},
								new
								{
									@class = "btn btn-primary no-margin no-padding-horizontal"
								})
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>