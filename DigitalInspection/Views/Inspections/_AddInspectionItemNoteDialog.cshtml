@model DigitalInspection.ViewModels.AddInspectionItemNoteViewModel

@{
	const string TEMPLATE_NAMESPACE = "addInspectionItemNoteDialog";
	const string CANCEL = TEMPLATE_NAMESPACE + "_cancel";
	const string SUCCESS = TEMPLATE_NAMESPACE + "_success";
}

@if (Model.ChecklistItem != null)
{
	<div id="@TEMPLATE_NAMESPACE" class="modal fade">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
					<h4 class="modal-title">Add an inspection item note - @Model.ChecklistItem.Name</h4>
				</div>
				@using (Ajax.BeginForm(
					"ItemNote",
					"Inspections",
					FormMethod.Post,
					new AjaxOptions
					{
						InsertionMode = InsertionMode.Replace,
						UpdateTargetId = "inspectionTableErrorContainer"
					},
					new { id = "addInspectionItemNoteForm", autocomplete = "off" })
				)
				{
					<div class="modal-body">
						<div class="form-group">
							@Html.LabelFor(m => m.Note, new { @class = "control-label" })
							@Html.TextAreaFor(m => m.Note, new { @class = "form-control", autofocus = "" })
							@Html.ValidationMessageFor(m => m.Note)
						</div>
					</div>

					<div class="modal-footer">
						<button id="@CANCEL" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
						<button id="@SUCCESS" type="submit" class="btn btn-primary" data-dismiss="modal">Add</button>
					</div>

					@Html.HiddenFor(m => m.InspectionItem.Id)
				}
			</div>
		</div>
	</div>
}

