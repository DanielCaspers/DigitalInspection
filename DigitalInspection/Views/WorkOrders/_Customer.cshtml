@model DigitalInspection.ViewModels.WorkOrderDetailViewModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "Digital Inspection";
}

@using DigitalInspection.Views.Helpers;

@*@section DetailedNavigationInfo {
	<div class="container-flex between">
		<div>
			@if (Model.CanEdit)
			{
				<a href="@Url.Action("_Customer", "WorkOrders")"
					class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}
			else
			{
				<a href="@Url.Action("Index", "WorkOrders")"
					class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}
		</div>

		<div>@Model.WorkOrder.Customer.Name</div>

		<div style="border-bottom: 2px solid @Model.WorkOrder.Vehicle.Color">
			<span>@Model.WorkOrder.Vehicle.Year</span>
			<span>@Model.WorkOrder.Vehicle.Make</span>
			<span>@Model.WorkOrder.Vehicle.Model</span>
		</div>
	</div>
}*@

@section TabContainer {
	@{ Html.RenderPartial("TabContainers/_WorkOrderDetailTabs", Model.TabViewModel);}
}

@section Toolbar{
	<div class="container-flex between ma-nav-info">
		<div>
			@if (Model.CanEdit)
			{
				<a href="@Url.Action("_Customer", "WorkOrders")"
				   class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}
			else
			{
				<a href="@Url.Action("Index", "WorkOrders")"
				   class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}

			<span>@HtmlHelpers.Pluralizer(Model.WorkOrder.Customer.Name)</span>
			<span>@Model.WorkOrder.Vehicle.Year</span>
			<span>@Model.WorkOrder.Vehicle.Make</span>
			<span>@Model.WorkOrder.Vehicle.Model</span>

			@if (String.IsNullOrWhiteSpace(Model.WorkOrder.Vehicle.Color))
			{
				<span class="car-color-indicator">?</span>
			}
			else
			{
				<span class="car-color-indicator" style="background-color: @Model.WorkOrder.Vehicle.Color;"></span>
			}
		</div>

		<div>
			@if (Model.CanEdit)
			{
				<button type="button"
						class="btn btn-default no-margin"
						onclick="$('#editCustomerForm').submit()">
					<i class="material-icons">save</i>
				</button>
			}
			else
			{
				@Ajax.RawActionLink(
					"<i class=\"material-icons\">edit</i>",
					"_Customer",
					"WorkOrders",
					new { id = Model.WorkOrder.Id, canEdit = true },
					new AjaxOptions
					{
						UpdateTargetId = "ajaxContentWrapper",
						InsertionMode = InsertionMode.ReplaceWith,
						HttpMethod = "GET"
					},
					new { @class = "btn btn-default no-margin" })
			}
		</div>
	</div>

}

<div class="container-fluid">
	<div class="jumbotron">
		@using (Ajax.BeginForm(
					"SaveCustomer",
					"WorkOrders",
					new { id = Model.WorkOrder.Id },
					new AjaxOptions
					{
						InsertionMode = InsertionMode.Replace,
						UpdateTargetId = "ajaxContentWrapper"
					}, new
					{
						id = "editCustomerForm",
						autocomplete = "off"
					}
				)
		)
		{
			<fieldset>
				<div class="row">
					<div class="col-sm-6 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Name, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Name, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Name)
					</div>
				</div>

				<div class="row">
					<div class="col-sm-6 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Address.Line1, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Address.Line1, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Address.Line1)
					</div>

					<div class="col-sm-6 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Address.Line2, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Address.Line2, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Address.Line2)
					</div>
				</div>

				<div class="row">
					<div class="col-sm-6 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Address.City, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Address.City, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Address.City)
					</div>

					<div class="col-sm-3 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Address.State, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Address.State, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Address.State)
					</div>

					<div class="col-sm-3 form-group">
						@Html.LabelFor(m => m.WorkOrder.Customer.Address.ZIP, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Customer.Address.ZIP, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Customer.Address.ZIP)
					</div>
				</div>

				<!-- Hidden fields for model binding -->
				@Html.HiddenFor(m => m.WorkOrder.Id)
				@Html.HiddenFor(m => m.WorkOrder.Date)
				@Html.HiddenFor(m => m.WorkOrder.ScheduleDate)
				@Html.HiddenFor(m => m.WorkOrder.CompletionDate)
				@Html.HiddenFor(m => m.WorkOrder.EmployeeId)
				@Html.HiddenFor(m => m.WorkOrder.Status.Code)
				@Html.HiddenFor(m => m.WorkOrder.Status.Description)
				@Html.HiddenFor(m => m.WorkOrder.Status.Timestamp)
				@Html.HiddenFor(m => m.WorkOrder.Status.Misc)
				<!-- TODO may require binding like phone numbers-->
				@Html.HiddenFor(m => m.WorkOrder.WorkDescription)

				@Html.HiddenFor(m => m.WorkOrder.Customer.Id)
				<!-- https://stackoverflow.com/a/26093533/2831961 -->
				@for (int i = 0; i < Model.WorkOrder.Customer.PhoneNumbers.Count; i++)
				{
					@Html.HiddenFor(m => Model.WorkOrder.Customer.PhoneNumbers[i].ContactName)
					@Html.HiddenFor(m => Model.WorkOrder.Customer.PhoneNumbers[i].Number)
					@Html.HiddenFor(m => Model.WorkOrder.Customer.PhoneNumbers[i].Type)
				}

				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Year)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Make)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Model)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.License)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Odometer)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Color)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Engine)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.Transmission)
				@Html.HiddenFor(m => m.WorkOrder.Vehicle.VIN)

			</fieldset>
		}
	</div>
</div>
