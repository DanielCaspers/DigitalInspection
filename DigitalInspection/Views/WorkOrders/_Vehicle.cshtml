@model DigitalInspection.ViewModels.WorkOrderDetailViewModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "Digital Inspection";
}

@using DigitalInspection.Views.Helpers;

@section TabContainer {
	@{ Html.RenderPartial("TabContainers/_WorkOrderDetailTabs", Model.TabViewModel);}
}

@section Toolbar{

	<div class="container-flex between ma-nav-info">

		<div>
			@if (Model.CanEdit)
			{
				<a href="@Url.Action("_Vehicle", "WorkOrders")"
				   class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}
			else
			{
				<a href="@Url.Action("Index", "WorkOrders")"
				   class="btn btn-default back-button no-margin pull-left">
					<i class="material-icons">arrow_back</i>
					Order @Model.WorkOrder.Id.Substring(3)
				</a>
			}


			<span>@Model.WorkOrder.Customer.Name's</span>

			<span>
				<span>@Model.WorkOrder.Vehicle.Color</span>
				<span>@Model.WorkOrder.Vehicle.Year</span>
				<span>@Model.WorkOrder.Vehicle.Make</span>
				<span>@Model.WorkOrder.Vehicle.Model</span>
			</span>

		</div>

		<div >
			@if (Model.CanEdit)
			{
				<button type="button"
						class="btn btn-default no-margin"
						onclick="alert('Feature coming soon')">
					<i class="material-icons">save</i>
				</button>
			}
			else
			{
				<a href="@Url.Action("_Vehicle", "WorkOrders", new { id = Model.WorkOrder.Id, canEdit = true })"
				   class="btn btn-default no-margin">
					<i class="material-icons">edit</i>
				</a>
			}
		</div>
	</div>
}

<div class="container-fluid">
	<div class="container-fluid">
		<div class="jumbotron">
			<fieldset>
				<div class="row">
					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Year, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Year, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control", type = "number" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Year)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Make, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Make, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Make)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Model, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Model, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Model)
					</div>
				</div>

				<div class="row">
					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.License, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.License, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.License)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Odometer, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Odometer, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control", type = "number" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Odometer)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Color, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Color, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Color)
					</div>
				</div>

				<div class="row">
					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Engine, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Engine, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Engine)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.Transmission, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.Transmission, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.Transmission)
					</div>

					<div class="col-sm-4 form-group">
						@Html.LabelFor(m => m.WorkOrder.Vehicle.VIN, new { @class = "control-label" })
						@Html.TextBoxFor(m => m.WorkOrder.Vehicle.VIN, HtmlHelpers.ConditionalDisable(!Model.CanEdit, new { @class = "form-control" }))
						@Html.ValidationMessageFor(m => m.WorkOrder.Vehicle.VIN)
					</div>
				</div>

			</fieldset>
		</div>
	</div>
</div>
